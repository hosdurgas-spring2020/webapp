version: 2.0

jobs:
  pr_check:
    docker:
      - image: node:11.10.1

    steps:
      - checkout

      - run: npm install
      # - run: apt-get install mocha
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: "Build"
          command: node ciserver.js

      - run:
          name: "Test"
          command: |
            npm run test
            echo 'Done'
  build:
    docker:
      - image: node:11.10.1

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      # run tests!
      - run:
          name: "Test"
          command: node ciserver.js
          # background: true
      - run:
          name: "Test"
          command: npm run test

      - run:
          name: "Zip"
          command: |
            apt-get update
            apt-get install zip
            apt-get install unzip

      - run:
          command: zip -r artifacts.zip . -x '*aws/*' '*node_modules'
      - run:
          name: "Upload to S3"
          command: npm run
      - run:
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            apt-get install less
      - run:
          command: |
            mkdir ~/.aws 
            echo -e "[default]\naws_access_key_id=$AWS_KEY\naws_secret_access_key=$AWS_SECRET\n" > ~/.aws/credentials
            echo -e "[default]\nregion=$AWS_REGION\noutput=json\n" > ~/.aws/config

      - run:
          name: CodeDeploy
          command: aws deploy create-deployment --application-name csye6225-webapp --s3-location bucket=$CDS3BUCKET,key=artifacts.zip,bundleType=zip --deployment-group-name csye6225-webapp-deployment

workflows:
  version: 2
  pr_check_workflow:
    jobs:
      - pr_check
  build_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master
