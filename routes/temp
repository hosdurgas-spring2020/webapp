version: 2
jobs:
  pr_check:
    docker:
      - image: node:11.10.1
      - image: circleci/mysql:5.7.29
        environment:
          MYSQL_HOST: localhost
          MYSQL_DATABASE: test
          MYSQL_USER: root
      

    # working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      # - run: apt-get install mocha
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: "Build" 
          command: node ciserver.js
          # background: true
      - run: 
          name: "Test"
          command: |
            npm run test
            echo 'Done'
  build:
    docker:
      - image: node:11.10.1
      - image: circleci/mysql:5.7.29
        environment:
          MYSQL_HOST: localhost
          MYSQL_DATABASE: test
          MYSQL_USER: root
      

    # working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: "Build" 
          command: node ciserver.js
          # background: true
      - run: 
          name: "Test"
          command: npm run test
  


workflows:
  version: 2
  pr_check_workflow:
    jobs:
      - pr_check
  build_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
          
      
      
  
    
      



      - run:
          name: "CodeDeploy"
          command: |
            cat ~/.aws/credentials
            aws s3 ls

      - run:
          command: aws deploy create-deployment --application-name csye6225-webapp --s3-location bucket=codedeploy.shaktichetan.me,key=arti.zip,bundleType=zip --deployment-group-name csye6225-webapp-deployment --debug --region us-east-1


- aws-cli/setup:
          profile-name: default
          aws-access-key-id: AWS_KEY
          aws-secret-access-key: AWS_SECRET
          aws-region: AWS_REGION



workflows:
  version: 2
  pr_check_workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build